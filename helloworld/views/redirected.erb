<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0, maximum-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Redirected</title>
    <script>
        window.onAmazonLoginReady = function () {
            amazon.Login.setClientId('<%= @client_id %>');
        };
        window.onAmazonPaymentsReady = function () {
            showWidget();
        }
    </script>

    <script async="async" src='https://static-fe.payments-amazon.com/OffAmazonPayments/jp/sandbox/lpa/js/Widgets.js'></script>

    <style type="text/css">
        #addressBookWidgetDiv{width: 400px; height: 228px;}
        #walletWidgetDiv {width: 400px; height: 228px;}
    </style>

</head>
<body>
    <div id="addressBookWidgetDiv"></div>
    <div id="walletWidgetDiv"></div>

    <script type="text/javascript">
        function showWidget() {
            new OffAmazonPayments.Widgets.AddressBook({
            sellerId: "<%= @seller_id %>",
            onOrderReferenceCreate: function(orderReference) {
                // Here is where you can grab the Order Reference ID.
                orderReference.getAmazonOrderReferenceId();
                // ajax で認証し取得した Id を form に渡す
                document.getElementById('orderReferenceId').value = orderReference.getAmazonOrderReferenceId();
            },
            onAddressSelect: function(orderReference) {
                // Replace the following code with the action that you want
                // to perform after the address is selected. The
                // amazonOrderReferenceId can be used to retrieve the address
                // details by calling the GetOrderReferenceDetails operation.
                // If rendering the AddressBook and Wallet widgets
                // on the same page, you do not have to provide any additional
                // logic to load the Wallet widget after the AddressBook widget.
                // The Wallet widget will re-render itself on all subsequent
                // onAddressSelect events, without any action from you.
                // It is not recommended that you explicitly refresh it.
            },
            design: {
                designMode: 'responsive'
            },
            onReady: function(orderReference) {
                // Enter code here you want to be executed
                // when the address widget has been rendered.
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
            }).bind("addressBookWidgetDiv");

            new OffAmazonPayments.Widgets.Wallet({
                sellerId: "<%= @seller_id %>",
                onPaymentSelect: function(orderReference) {
                    // Replace this code with the action that you want to perform
                    // after the payment method is selected.

                    // Ideally this would enable the next action for the buyer
                    // including either a "Continue" or "Place Order" button.
                },
                design: {
                    designMode: 'responsive'
                },

                onError: function(error) {
                    // Your error handling code.
                    // During development you can use the following
                    // code to view error messages:
                    // console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                    // See "Handling Errors" for more information.
                }
            }).bind("walletWidgetDiv");
        }
    </script>
    <form action="/pay" method="POST">
        <input type="hidden" id="orderReferenceId" name="orderReferenceId">
        <input type="submit" value="決済POST">
    </form>
</body>
</html>